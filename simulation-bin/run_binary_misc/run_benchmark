#!/bin/sh

benchmark () {
	# name of the benchmark
	name=$1

	# executable and arguments to be used for the benchmark
	exec=$2
	cmd="../$2.out $3"
	echo -e "Benchmark for:\n  $cmd"

	# connectivity file
        conn_file=$4

	# number of trials to run
	num_trials=$5

	# sleep interval for memory tracking
	slpintv=$6

	# directory for storing the results
	bmdir='benchmark_'$name

	# create and enter directory for the results
	if [[ -d $bmdir ]]; then
		# ask for confirmation to remove
		echo "Remove existing directory '$bmdir' (y/n)?"
		read answer
		if [[ $answer == "y" ]]; then
			sudo rm -R -f $bmdir
			mkdir $bmdir
		fi
	else
		mkdir $bmdir
	fi
	cd $bmdir

	# copy connectivity matrix
	#cp ../../run_binary_paper1/connections.txt .
	if [[ -n ${conn_file} ]]; then
		cp ../${conn_file} .
	fi

	# save system information
	uname -a > sys_info.log
	echo "---" >> sys_info.log
	lscpu >> sys_info.log
	echo "---" >> sys_info.log
	sudo dmidecode >> sys_info.log

	# start tracking the memory
	sudo screen -d -m /bin/bash ../track_allocated_memory $exec $slpintv

	# use hyperfine for running the simulation trials and tracking the runtime
	screen -d -m hyperfine --runs ${num_trials} --export-json 'benchmark_hyperfine.json' "$cmd"

	cd ..
}

#benchmark "2N1S_basic_late" "2N1S_basic_late" "-learn=BASIC_LATE -Ca_pre=1.0 -Ca_post=0.2758 -purpose= -t_max=28800.0" "connections_smallnet3.txt" 10 "20s"
#benchmark "CA200" "net200" "-Nl_exc=40 -Nl_inh=20 -t_max=28820 -N_stim=25 -pc=0.1 -learn=TRIPLETf100 -recall=F100D1at28810.0 -w_ei=2 -w_ie=4.0 -w_ii=4.0 -I_0=0.15 -sigma_WN=0.05 -theta_p=3.0 -theta_d=1.2 -purpose='8h-recall'" "" 10 "15m"
benchmark "CA200_10s-recall" "net200" "-Nl_exc=40 -Nl_inh=20 -t_max=25 -N_stim=25 -pc=0.1 -learn=TRIPLETf100 -recall=F100D1at20.0 -w_ei=2 -w_ie=4.0 -w_ii=4.0 -I_0=0.15 -sigma_WN=0.05 -theta_p=3.0 -theta_d=1.2 -purpose='10s-recall'" "" 10 "15m"
